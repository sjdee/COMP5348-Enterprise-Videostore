using System;using System.Collections.Generic;using System.Linq;using System.Text;using BookStore.Business.Components.Interfaces;using BookStore.Business.Entities;namespace BookStore.Business.Components{    public class CatalogueProvider : ICatalogueProvider    {        public List<Entities.Book> GetBook(int pOffset, int pCount)        {            using (BookStoreEntityModelContainer lContainer = new BookStoreEntityModelContainer())            {                return (from Book in lContainer.Books                        orderby Book.Id                        select Book).Skip(pOffset).Take(pCount).ToList();            }        }        public Book GetBookById(int pId)        {            using (BookStoreEntityModelContainer lContainer = new BookStoreEntityModelContainer())            {                Book book = lContainer.Books.Where(item => item.Id == pId).First();                    //(from Book in lContainer.Books                    //    where Book.Id == pId                    //    select Book).FirstOrDefault();                return book;                             }                   }        public void UpdateStock(List<Book> Books)        {            using (BookStoreEntityModelContainer lContainer = new BookStoreEntityModelContainer())            {                foreach (Book book in Books)                {                    int wBookId = lContainer.WBooks.Where(wBook => book.Title == wBook.Title).First().Id;                    IList<WStock> WStocks = lContainer.WStocks.Where(wstocks => wstocks.WBook_id == wBookId).ToList();                    int sum = WStocks.Sum(d => d.quantity.GetValueOrDefault());
                   
                    book.Quantity = sum;                }            }        }    }}